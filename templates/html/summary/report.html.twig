<html>
<head>
    <title>PhpMetrics report</title>
    <meta charset="utf-8">

    <style type="text/css">
        {% include "assets/bootstrap.css.twig" %}

        .validate-critical {
            background-color:#B01E00 !important;
            color:#FFF;
        }
        .validate-warning {
            background-color:#f4b300 !important;
            color:#333;
        }
        .validate-good {
            background-color:#78ba00 !important;
            color:#FFF;
        }
        .validate-unknown {
        }


    </style>
</head>

<body>

<div class="container">
    <h1>PhpMetrics report</h1>

    <div class="row col-sm-6">
        <h2>Maintenability</h2>
        <small><a id="btn-save-maintenability" download="phpmetric-bubbles.svg">Download (as SVG)</a></small>
        <div id="svg-maintenability"></div>
    </div>
    <div class="row col-sm-6">
        <h2>Custom chart</h2>
        <small><a id="btn-save-custom" download="phpmetric-custom.svg">Download (as SVG)</a></small>


        <table class="table table-condensed table-bordered">
            <tr>
                <td>X Axis</td>
                <td>Y Axis</td>
                <td>Diameter</td>
            </tr>
            <tr>
                <td>
                    <select id="xAxis" class="form-control" onchange="xAxis = this.value; updateCustomChart();">
                        {% for key in keys|sort %}
                            <option value="{{key}}">{{key|textify}} </option>
                        {% endfor %}
                    </select>
                </td>
                <td>
                    <select id="yAxis" class="form-control" onchange="yAxis = this.value; updateCustomChart();">
                        {% for key in keys|sort %}
                            <option value="{{key}}">{{key|textify}} </option>
                        {% endfor %}
                    </select>
                </td>
                <td>
                    <select id="rAxis" class="form-control" onchange="rAxis = this.value; updateCustomChart();">
                        {% for key in keys|sort %}
                            <option value="{{key}}">{{key|textify}} </option>
                        {% endfor %}
                    </select>
                </td>
            </tr>
        </table>

        <div id="svg-custom"></div>
    </div>

    <h2>Average for each module</h2>

    <table class="table table-striped table-condensed" id="table-results">
        <thead>
            <th>File</th>
            <th>LOC (total)</th>
            <th>Complexity</th>
            <th>Maintenability index</th>
            <th>Volume</th>
            <th>Vocabulary</th>
            <th>Comment weight</th>
            <th>Difficulty</th>
            <th>Bugs</th>
            <th>Intelligent content</th>
        </thead>
        <tbody>
        {% for directory, bound in directoryBounds %}
            <tr>
                <th style="padding-left:{{bound.depth}}em;">{{directory}}</th>
                <td>{{bound.getSum('loc')}}</td>
                <td class="validate-{{bound.getAverage('cyclomaticComplexity')|rule('cyclomaticComplexity')}}">
                    {{bound.getAverage('cyclomaticComplexity')|round}}
                </td>
                <td class="validate-{{bound.getAverage('maintenabilityIndex')|rule('maintenabilityIndex')}}">
                    {{bound.getAverage('maintenabilityIndex')|round}}
                </td>
                <td class="validate-{{bound.getAverage('volume')|rule('volume')}}">
                    {{bound.getAverage('volume')|round}}
                </td>
                <td class="validate-{{bound.getAverage('vocabulary')|rule('vocabulary')}}">
                    {{bound.getAverage('vocabulary')|round}}
                </td>
                <td class="validate-{{bound.getAverage('commentWeight')|rule('commentWeight')}}">
                    {{bound.getAverage('commentWeight')|round}}
                </td>
                <td class="validate-{{bound.getAverage('difficulty')|rule('difficulty')}}">
                    {{bound.getAverage('difficulty')|round}}
                </td>
                <td class="validate-{{bound.getAverage('bugs')|rule('bugs')}}">
                    {{bound.getAverage('bugs')|round(2)}}
                </td>
                <td class="validate-{{bound.getAverage('intelligentContent')|rule('intelligentContent')}}">
                    {{bound.getAverage('intelligentContent')|round}}
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>


    <div>
        Powered by <a href="https://github.com/Halleck45/PhpMetrics">PhpMetrics</a> - Copyright Jean-François Lépine
    </div>


</div>






{% include "assets/d3js.js.twig" %}
{% include "assets/jquery.js.twig" %}
{% include "assets/tablesorter.js.twig" %}
{% include "summary/report-maintenability.js.twig" %}
{% include "summary/report-custom.js.twig" %}


<script type="text/javascript">
    $(function(){
        $("#table-results").tablesorter();
        updateCustomChart();
        updateMaintenablityChart();

        // selects
        $('#xAxis').val(xAxis);
        $('#yAxis').val(yAxis);
        $('#rAxis').val(rAxis);
    });

    // default selected elements
    var xAxis = 'intelligentContent';
    var yAxis = 'cyclomaticComplexity';
    var rAxis = 'loc';

    /**
     * Update custom chart
     */
    function updateCustomChart() {
        chartCustom(xAxis, yAxis, rAxis);
        var svg  = document.getElementById('svg-custom').childNodes[0],
        xml  = new XMLSerializer().serializeToString(svg),
        data = btoa(xml),
        img  = new Image();
        $('#btn-save-custom').attr('href', 'data:application/octet-stream;base64,' + data)
    };

    /**
     * Update maintenability chart (bubbles)
     */
    function updateMaintenablityChart() {
        chartMaintenability(xAxis, yAxis, rAxis);
        var svg  = document.getElementById('svg-maintenability').childNodes[0],
                xml  = new XMLSerializer().serializeToString(svg),
                data = btoa(xml),
                img  = new Image();
        $('#btn-save-maintenability').attr('href', 'data:application/octet-stream;base64,' + data)
    };

    /**
     * string as readable text
     *
     * @param string
     * @returns {XML|string|void}
     */
    function textify(string) {
        string = string.charAt(0).toUpperCase() + string.slice(1);
        return string.replace(/([a-z0-9])([A-Z])/, "$1 $2");
    }

    {% autoescape false %}
    var data = {{ results | json_encode }}
    {% endautoescape %}
</script>


</body>
</html>