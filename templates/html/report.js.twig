{% autoescape false %}
<script type="text/javascript">
var diameter = 600,
format = d3.format(",d"),
color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("#svg").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");


var data = {{ results | json_encode }}

d3
    .select('#svg')
    .datum(data)
    .call(bubble)
        ;

var node = svg.selectAll(".node")
    .data(
        bubble.nodes(mapDatas(data))
        .filter(function(d) { return !d.children; })
    )
    .enter().append("g")
    .attr("class", "node")
    .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

    node
        .append("title")
        .text(function(d) { return d.name
            + "\n\tCyclomatic Complexity : " + format(d.cyclomaticComplexity)
            + "\n\tMaintenability Index: " + format(d.maintenabilityIndex)
        ; });

    node
        .append("circle")
        .attr("r", function(d) { return d.r; })
        .style("fill", function(d) { return d.color; });

function mapDatas(root) {
    var datas = [];
    var i, color;
    for(i in root) {
        var e = root[i];
        if(e.maintenabilityIndex > 65 || e.maintenabilityIndex == 'INF') {
            color = '#78BA00';
        }else if(e.maintenabilityIndex > 35) {
            color = '#F4B300';
        }
        else {
            color = '#FF2E12';
        }
        datas.push({
            "value": e.cyclomaticComplexity + 1
            , "name": e.filename
            , "color": color
            , "cyclomaticComplexity": e.cyclomaticComplexity
            , "maintenabilityIndex": parseInt(e.maintenabilityIndex)
        });
    }
    return {"children":datas};
}

d3.select(self.frameElement).style("height", diameter + "px");
</script>
{% endautoescape %}